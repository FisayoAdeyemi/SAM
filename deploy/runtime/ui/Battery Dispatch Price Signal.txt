Battery Dispatch Price Signal
1096
422
11
SchedNumeric

1
12
Name
5
15
batt_cycle_cost
X
3
333
Y
3
231
Width
3
114
Height
3
24
Tool Tip
5
0
Label
5
5
Value
UseSchedule
2
1
ScheduleOnly
2
0
FixedLength
3
4294967295
Description
5
0
TabOrder
3
4294967295
Choice

1
9
Name
5
22
batt_cycle_cost_choice
X
3
333
Y
3
204
Width
3
198
Height
3
24
Tool Tip
5
0
Items
6
2
Calculate automatically
Enter penalty
Selection
3
4294967295
TabOrder
3
4
Label

1
13
Name
5
27
batt_cycle_cost_description
X
3
15
Y
3
165
Width
3
918
Height
3
36
Tool Tip
5
0
Caption
5
304
The controller cycles the battery only if anticipated electricity savings exceed the cycle degradation penalty. A higher penalty decreases cycling, a lower penalty increases cycling and may result in more frequent battery replacements. Battery replacement inputs are on the  Battery Cell and System page.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Label

1
13
Name
5
28
batt_cycle_cost_description6
X
3
15
Y
3
273
Width
3
918
Height
3
36
Tool Tip
5
0
Caption
5
187
For the Dispatch to Custom Weather File option, choose a weather file in the SAM CSV format to use for the dispatch forecast instead of the weather file on the Location and Resource page.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1
Divider

1
10
Name
5
22
batt_cycle_costs_label
X
3
15
Y
3
141
Width
3
920
Height
3
16
Tool Tip
5
0
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
25
Cycle Degradation Penalty
Bold
2
1
RadioChoice

1
11
Name
5
36
batt_dispatch_wf_forecast_choice_psd
X
3
15
Y
3
69
Width
3
300
Height
3
72
Tool Tip
5
0
Selection
3
0
Items
6
3
Perfect look ahead
One day look behind
Look ahead to custom weather file
ShowCaptions
2
1
Horizontal
2
0
TabOrder
3
4294967295
Button

1
8
Name
5
37
batt_select_weather_file_forecast_psd
X
3
15
Y
3
312
Width
3
90
Height
3
24
Tool Tip
5
0
Caption
5
9
Browse...
TabOrder
3
6
TextEntry

1
11
Name
5
36
batt_user_specified_weather_file_psd
X
3
105
Y
3
312
Width
3
828
Height
3
24
Tool Tip
5
0
Text
5
0
Editable
2
1
ForeColour
4
0
0
0
255
BackColour
4
255
255
255
255
TabOrder
3
7
Divider

1
10
Name
5
18
batt_weather_label
X
3
12
Y
3
255
Width
3
920
Height
3
19
Tool Tip
5
0
Orientation
3
0
Colour
4
120
120
120
255
Caption
5
32
Custom Weather File for Forecast
Bold
2
1
GroupBox

1
8
Name
5
8
object 4
X
3
6
Y
3
3
Width
3
1042
Height
3
358
Tool Tip
5
0
Caption
5
30
Price Signals Battery Dispatch
Bold
2
1
Label

1
13
Name
5
8
object 7
X
3
15
Y
3
21
Width
3
1001
Height
3
47
Tool Tip
5
0
Caption
5
335
The price signal forecast option operates the battery to minimize the electricity bill based on an electricity price estimate that represents the cost to the system owner of purchasing electricity from the grid in each time step. The forecast horizon can be selected from perfect look ahead, one day look behind, and a custom forecast.
TextColour
4
0
0
0
255
Bold
2
0
FontSize
3
0
WordWrap
2
1
AlignRight
2
0
AlignTop
2
1

4
batt_cycle_cost
3
2
Cycle degradation penalty 
$/cycle-kWh
Battery Dispatch
0
2
1
2
1
1
0
SchedNumeric
batt_cycle_cost_choice
3
1
Cycle degradation penalty method
 
Battery Dispatch
37
Calculate automatically|Enter penalty
2
1
1
1
1
0
ListBox
batt_dispatch_wf_forecast_choice_psd
3
1
 
 
 
0
0
1
1
1
1
0
RadioChoice
batt_user_specified_weather_file_psd
3
4
 
 
Battery Dispatch
0
3
1
4
0
Default

0
1426
on_load{'Battery Dispatch Price Signal'}=define()
{	
	psd_forecast_choice();
	if (technology() == "Fuel Cell")
		toggle_dispatch();
		
	show_hide_charge_options();
	enable_auto_inputs_btm(1);
	
};


on_change{'batt_dispatch_choice'}=define(){toggle_dispatch();};

on_change{'batt_cycle_cost_choice'}=define()
{
	enable('batt_cycle_cost', ${batt_cycle_cost_choice} == 1);
};

on_change{'batt_select_weather_file_forecast_psd'}=define()
{
	file = choose_file( "", 'Choose a weather file', 
			'All Weather Files (*.tm2,*.tm3,*.epw,*.smw,*.csv)|*.tm2;*.tm3;*.epw;*.smw;*.csv');
	${batt_user_specified_weather_file_psd} = file;
	run_forecast(file);
};

function enable_auto_inputs_btm(on_off)
{
	enable('batt_cycle_cost_choice', on_off);
	enable('batt_cycle_cost', ${batt_cycle_cost_choice} == 1);
}

on_change{'batt_dispatch_wf_forecast_choice_psd'} = define() 
{
	psd_forecast_choice() ;
};

function psd_forecast_choice() 
{
	value('batt_dispatch_choice', 4);
	choice = value('batt_dispatch_wf_forecast_choice_psd');

	// Turn on/off forecast input
	//toggle_forecast();
	enable('batt_select_weather_file_forecast_psd', choice == 2);
	enable('batt_user_specified_weather_file_psd', choice == 2);

	value('batt_dispatch_wf_forecast_choice', choice);
	if (choice == 2)
	{
		file = ${batt_user_specified_weather_file_psd};
		run_forecast(file);
	}
	else {
		${batt_pv_ac_forecast} = [0];
		${batt_pv_clipping_forecast} = [0];
	}
}